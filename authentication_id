func authenticateWithTouchID() {
    // Get the local authentication context.
    let localAuthContext = LAContext()
    
    let reasonText = "Authentication is required to sign in AppCoda"
    var authError: NSError?
if
!localAuthContext.canEvaluatePolicy(LAPolicy.DeviceOwnerAuthenticationWithBiometrics,
 error: &authError) {
        println(authError?.localizedDescription)
        // Display the login dialog when Touch ID is not available (e.g. in
simulator)
        showLoginDialog()
return
} }

if let error = error {
            switch error.code {
            case LAError.AuthenticationFailed.rawValue:
                print("Authentication failed")
            case LAError.PasscodeNotSet.rawValue:
                print("Passcode not set")
            case LAError.SystemCancel.rawValue:
                print("Authentication was canceled by system")
            case LAError.UserCancel.rawValue:
                print("Authentication was canceled by the user")
            case LAError.TouchIDNotEnrolled.rawValue:
                print("Authentication could not start because Touch ID has no
enrolled fingers.")
            case LAError.TouchIDNotAvailable.rawValue:
                print("Authentication could not start because Touch ID is not
available.")
            case LAError.UserFallback.rawValue:
                print("User tapped the fallback button (Enter Password).")
            default:
                print(error.localizedDescription)
}
            // Fallback to password authentication
            NSOperationQueue.mainQueue().addOperationWithBlock({
                self.showLoginDialog()
})
} }
}
